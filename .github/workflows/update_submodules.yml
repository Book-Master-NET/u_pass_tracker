name: Update Submodules with AI Documentation

on:
  schedule:
    - cron: "0 */20 * * *"   # cada 20 horas
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: read

jobs:
  # Job 1: Detecci√≥n de cambios y an√°lisis con MCP
  detect-and-analyze:
    name: üîç Detect Changes & Analyze with MCP
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      has-changes: ${{ steps.detect-changes.outputs.changes }}
      mcp-analysis: ${{ steps.run-mcp-analysis.outputs.analysis-result }}
      submodules-data: ${{ steps.generate-json.outputs.submodules-data }}
    
    steps:
      # ... [tus steps anteriores] ...
      
      - name: Setup Python for MCP
        if: steps.detect-changes.outputs.changes == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
  
      - name: Install Python dependencies
        if: steps.detect-changes.outputs.changes == 'true'
        run: |
          echo "üì¶ Installing required Python packages..."
          pip install requests
  
      - name: Run MCP analysis
        id: run-mcp-analysis
        if: steps.detect-changes.outputs.changes == 'true'
        run: |
          echo "üìä Running MCP analysis..."
          python .github/scripts/mcp_analyzer.py submodules_data.json > mcp_analysis.json
          
          # Extraer t√≠tulo y cuerpo para el PR
          PR_TITLE=$(jq -r '.pr_title' mcp_analysis.json)
          PR_BODY=$(jq -r '.pr_body' mcp_analysis.json)
          
          echo "analysis-result<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "‚úÖ MCP analysis completed!"

  # Job 2: An√°lisis Ollama opcional (solo para cambios de alto riesgo)
  optional-ollama-analysis:
    name: ü§ñ Optional Ollama Analysis (High Risk)
    runs-on: ubuntu-latest
    needs: detect-and-analyze
    if: needs.detect-and-analyze.outputs.has-changes == 'true'
    timeout-minutes: 10
    
    steps:
      - name: Download MCP artifacts
        uses: actions/download-artifact@v4
        with:
          name: mcp-analysis-artifacts
          path: ./

      - name: Check risk level
        id: check-risk
        run: |
          RISK_LEVEL=$(jq -r '.overall_risk' mcp_analysis.json)
          echo "risk-level=$RISK_LEVEL" >> $GITHUB_OUTPUT
          
          if [ "$RISK_LEVEL" = "high" ]; then
            echo "run-ollama=true" >> $GITHUB_OUTPUT
          else
            echo "run-ollama=false" >> $GITHUB_OUTPUT
          fi

      - name: Setup Ollama (only for high risk)
        if: steps.check-risk.outputs.run-ollama == 'true'
        run: |
          echo "üöÄ Setting up Ollama for high-risk analysis..."
          curl -fsSL https://ollama.ai/install.sh | sh
          ollama pull llama3.2:3b
          ollama serve &

      - name: Run enhanced AI analysis
        if: steps.check-risk.outputs.run-ollama == 'true'
        run: |
          echo "ü§ñ Running enhanced AI analysis for high-risk changes..."
          
          # Crear prompt basado en el an√°lisis MCP
          MCP_SUMMARY=$(jq -r '.summary' mcp_analysis.json)
          SUBMODULES_COUNT=$(jq -r '.submodules | length' mcp_analysis.json)
          
          cat > ollama_prompt.txt << EOF
          You are a senior software architect. Based on this MCP analysis, provide deeper insights:
          
          MCP ANALYSIS SUMMARY:
          $MCP_SUMMARY
          
          DETAILED ANALYSIS:
          $(cat mcp_analysis.json | jq -r '.submodules[] | "Submodule: \(.name)\nRisk: \(.risk_level)\nBreaking: \(.breaking_changes)\nCommits: \(.commits_count)\n---"')
          
          Provide additional architectural recommendations and potential impacts.
          EOF
          
          ollama run llama3.2:3b "$(cat ollama_prompt.txt)" > ollama_analysis.md
          
          # Combinar con an√°lisis MCP
          echo "" >> mcp_analysis.json
          echo "\"ollama_analysis\": \"$(sed ':a;N;$!ba;s/\n/\\n/g' ollama_analysis.md)\"" >> mcp_analysis.json

  # Job 3: Crear Pull Request
  create-pr:
    name: üìã Create Pull Request
    runs-on: ubuntu-latest
    needs: 
      - detect-and-analyze
      - optional-ollama-analysis
    if: needs.detect-and-analyze.outputs.has-changes == 'true'
    timeout-minutes: 10
    
    steps:
      - name: Generate GitHub App Token
        id: app-token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.BOOK_MASTER_NET_GITHUB_APP_ID }}
          private_key: ${{ secrets.BOOK_MASTER_NET_GITHUB_APP_PRIVATE_KEY }}
          installation_retrieval_mode: repository
          installation_retrieval_payload: ${{ github.repository }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          submodules: recursive

      - name: Download analysis artifacts
        uses: actions/download-artifact@v4
        with:
          name: mcp-analysis-artifacts
          path: ./

      - name: Configure Git for PR
        run: |
          git config user.name "fqmasterbot[app]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create Pull Request with MCP Analysis
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ steps.app-token.outputs.token }}
          commit-message: "chore: update submodules with MCP analysis [skip ci]"
          title: "$(jq -r '.pr_title' mcp_analysis.json)"
          body: |
            ${{ needs.detect-and-analyze.outputs.mcp-analysis }}
            
            ---
            
            ## üîß Technical Details
            - **Analysis Engine**: MCP Submodule Analyzer
            - **Workflow Run**: #${{ github.run_number }}
            - **Total Commits**: $(jq -r '.total_commits' mcp_analysis.json)
            - **Overall Risk**: $(jq -r '.overall_risk' mcp_analysis.json)
            
            ## üë• Suggested Reviewers
            $(jq -r '.suggested_reviewers[]' mcp_analysis.json | sed 's/^/- /')
            
            ---
            *ü§ñ This PR was created using MCP Submodule Analyzer with AI-powered risk assessment.*
          branch: submodule-update-${{ github.run_number }}
          delete-branch: true
          reviewers: remr11
          assignees: remr11

  # Job 4: Status report
  report-status:
    name: üìä Analysis Report
    runs-on: ubuntu-latest
    needs: [detect-and-analyze, create-pr]
    if: always()
    
    steps:
      - name: Generate status report
        run: |
          echo "## üîç MCP Submodule Analysis Report"
          echo "**Run #${{ github.run_number }}** - $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
          echo ""
          
          if [ "${{ needs.detect-and-analyze.outputs.has-changes }}" == "true" ]; then
            echo "### üì¶ Changes Detected"
            echo "- Submodules updated: ‚úÖ"
            echo "- MCP Analysis: ‚úÖ Completed"
            echo "- PR Created: ${{ needs.create-pr.result }}"
            echo ""
            
            echo "### üéØ Optimization Benefits"
            echo "- ‚úÖ Faster execution (no Ollama setup by default)"
            echo "- ‚úÖ More reliable analysis"
            echo "- ‚úÖ Better structured output"
            echo "- ‚úÖ Configurable risk assessment"
          else
            echo "### üì≠ No Changes Detected"
            echo "- Submodules: Already up to date"
            echo "- Analysis: Skipped"
            echo "- PR: Not needed"
          fi
